main :: () {

}

/*
b := F, T;

T & T := T;
F & T := F;
b & F := F;

d := 0, 1, 2, 3, 4, 5, 6, 7, 8, 9;

q := 0, 1, 2, 3, 4;
p := 3, 4, 5, 6, 7;

q = p
match a 3 or 4 that has been denoted as either a q or p
p = q = 3
match a 3 that has been denoted as p, or match a 3 that has been denoted as q, or match just 3

= is just the intersection operator I'm afraid

#(q_n = p) := 1 + n; incorrect! Doesn't work!
#(q = p)_n := 1 + n;
v := p = 4;
w := #v; What is this?

#v -> #(p = 4); p = 4 matches to (q = p)_n, so (p = 4) can be substituted into the n in 1 + n

*/
